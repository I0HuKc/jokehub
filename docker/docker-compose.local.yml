version: "3.9"
services:
  jokehub_backend:
    build:
      dockerfile: docker/backend.Dockerfile
      context: ../
    environment:
      - MONGO_DB_URL=mongodb://$MONGO_USER:$MONGO_USER_PASSWORD@jokehub_mongodb:27017/$MONGO_INITDB_DATABASE?w=majority
      - MONGO_DATABASE_NAME=$MONGO_INITDB_DATABASE
    ports:
      - "8000:8000"
    depends_on:
      jokehub_mongodb:
        condition: service_healthy
      jokehub_redis:
        condition: service_healthy
    container_name: jokehub_backend
    restart: unless-stopped

  jokehub_mongodb:
    image: mongo:5.0
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
      - ../tools/mongodb_init.sh:/docker-entrypoint-initdb.d/mongodb_init.sh
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "'db.runCommand({serverStatus:1}).ok'",
          "|",
          "mongo admin",
          "-u $MONGO_INITDB_ROOT_USERNAME",
          "-p $MONGO_INITDB_ROOT_PASSWORD",
          "--quiet | grep 1",
        ]
      interval: 1s
      timeout: 10s
      retries: 3
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
      - MONGO_INITDB_DATABASE=$MONGO_INITDB_DATABASE
      - MONGO_USER=$MONGO_USER
      - MONGO_USER_PASSWORD=$MONGO_USER_PASSWORD
      - MONGO_USER_ROLE=$MONGO_USER_ROLE
    container_name: jokehub_mongodb
    restart: unless-stopped

  jokehub_redis:
    image: redis:6-alpine
    ports:
      - "127.0.0.1:35006:6379"
    healthcheck:
      test: [
        "CMD", 
        "redis-cli", 
        "--raw", 
        "incr", 
        "ping"
      ]
      interval: 1s
      timeout: 10s
      retries: 3
    volumes:
      - redis_data:/var/lib/redis
    container_name: jokehub_redis
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

  mongodb_data:
    driver: local

networks:
  default:
    name: jokehub_net
